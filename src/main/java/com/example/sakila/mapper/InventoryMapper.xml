<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.InventoryMapper">
	<!--  on/removeFilm 영화 삭제시 인벤토리에서도 삭제  -->
	<select id="selectCountInventoryByFilm" parameterType="Integer">
		select count(*)
		from inventory
		where film_id = #{filmId}
	</select>
	
	<!-- inventortList(storId) 추가예정 film,rental, payment, customer -->
	<select id="selectInventoryListByStore" parameterType="Map" resultType="Map">
	    select 
	        t1.inventory_id inventoryId,
	        t1.film_id filmId,
	        t1.title title,
	        t1.last_update lastUpdate,
	        t2.customer_id customerId,
	        ifnull(t2.rental_date, '대여가능') rentalDate
	    from (
	        select 
	            i.inventory_id,
	            i.film_id,
	            f.title,
	            i.last_update,
	            i.store_id
	        from inventory i 
	        inner join film f on i.film_id = f.film_id
	    ) t1
	    left join (
	        select 
	            inventory_id,
	            customer_id,
	            rental_date
	        from rental
	        where return_date is null
	    ) t2 on t1.inventory_id = t2.inventory_id
	    <where>
	        t1.store_id = #{storeId}
	        <if test="searchInventory != null and searchInventory != ''">
	            and t1.title like concat('%', #{searchInventory}, '%')
	        </if>
	    </where>
	    order by t1.inventory_id desc
	    limit #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- inventoryTotalRowBystoreId -->
	<select id="selectInventoryTotalRowBystoreId" parameterType="Map">
		select count(*)
		from inventory i
	    inner join film f
	    on i.film_id = f.film_id
		<where>
			i.store_id = #{storeId}
			<if test="searchInventory != null and searchInventory != '' ">
			and f.title like concat('%',#{searchInventory},'%')
			</if>
		</where>
	</select>
	
	<!-- 인벤토리 추가 -->
	<insert id="insertInventory" parameterType="com.example.sakila.vo.Inventory">
		insert into inventory(film_id, store_id) values(#{filmId},#{storeId})
	</insert>
	
	<!-- 인벤토리 삭제 -->
	<delete id="deleteInventoryBykey" parameterType="Integer">
		delete from inventory
		where inventory_id = #{inventoryId}
	</delete>
</mapper>