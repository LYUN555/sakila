<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.FilmMapper">
	
	<!-- 배우의 영화 출연 리스트 -->
	<select id="selectFilmTitleListByActor" parameterType="int" resultType="com.example.sakila.vo.Film">
		select 
			f.film_id filmId
			, f.title title
		from film_actor fa INNER JOIN film f
		on fa.film_id = f.film_id
		where fa.actor_id = #{actorId}
	</select>
	
	<!-- 영화 정보 -->
	<select id="selectFilmOne" parameterType="int" resultType="map">
		select 
			fi.film_id filmId,
			fi.title title,
			fi.description description,
			fi.release_year releaseYear,
			fi.rental_duration rentalDuration,
			fi.rental_rate rentalRate,
			fi.length length,
			fi.replacement_cost replacementCost,
			fi.rating rating,
			fi.special_features specialFeatures,
			fi.last_update lastUpdate,
			fi.original_language_id originLanguageId,
			la.name language
		from film fi inner join language la
		on fi.language_id = la.language_id
		where fi.film_id = #{filmId}
	</select>
	<!-- 영화 추가 -->
	<insert id="insertFilm" parameterType="com.example.sakila.vo.Film">
		insert into film(
			title,
			description,
			release_year,
			language_id,
			original_language_id,
			rental_duration,
			rental_rate,
			length,
			replacement_cost,
			rating,
			special_features
			) values(
				#{title},
				#{description},
				#{releaseYear},
				#{languageId},
				#{originalLanguageId},
				#{rentalDuration},
				#{rentalRate},
				#{length},
				#{replacementCost},
				#{rating},
				#{specialFeatures}
			)
	</insert>
	<!-- 영화 검색 -->
	<select id="selectFilmListByTitle" parameterType="String" resultType="com.example.sakila.vo.Film">
		select
			film_id filmId,
			title
		from film
		where title like concat('%', #{searchTitle}, '%')
	</select>
	
	<!-- 영화 리스트(category null 이거나 0 일때) -->
	<select id="selectFilmList" parameterType="Map" resultType="Map">
		select 
			film_id filmId,
		    title,
			release_year releaseYear,
			rental_duration rentalDuration,
		    rental_rate rentalRate, 
		    length,
		    replacement_cost replacementCost,
		    rating
		from film
		order by film_id desc
		limit #{beginRow} , #{rowPerPage}
	</select>
	
	<!-- 전체 카테고리 카운트 -->
	<select id="selectFilmCount" resultType="int">
		select count(*)
		from film
	</select>
	
	<!-- 영화 리스트 (categoryId 가 null이거나 0이 아닐떄) -->
	<select id="selectFilmListByCategory" parameterType="Map" resultType="Map">
		select
			f.film_id filmId,
		    f.title title,
			f.release_year releaseYear,
			f.rental_duration rentalDuration,
		    f.rental_rate rentalRate, 
		    f.length length,
		    f.replacement_cost replacementCost,
		    f.rating rating,
		    fc.category_id categoryId
		from film f inner join film_category fc
		on f.film_id = fc.film_id
		where fc.category_id = #{categoryId}
		order by f.film_id desc
		limit #{beginRow} , #{rowPerPage}
	</select>
	
	<!-- 카테고리별 카운트 -->
	<select id="selectFilmCountByCategory" parameterType="Integer" resultType="int">
		select count(*)
		from film_category
		where category_id = #{categoryId}
	</select>
</mapper>