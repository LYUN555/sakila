<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.ActorMapper">
	<!-- mybatis 매핑은 자동증가를 명시적으로 처리를 해야해서 selectkey를 쓴다 -->
	<insert id="insertActor" parameterType="com.example.sakila.vo.Actor">
			<selectKey resultType="int" keyProperty="actorId" order="AFTER">
				select last_insert_id()
			</selectKey>
		insert into actor(
			first_name, last_name
		) values(
			#{firstName}, #{lastName}
		)
	</insert>
	<!-- 배우리스트 검색 -->
	<select id="selectActorList" parameterType="Map" resultType="com.example.sakila.vo.Actor">
		select
			actor_id actorId,
			first_name firstName,
			last_name lastName
		from actor
		<where>
			<if test="searchWord != null">
				first_name like concat('%',#{searchWord},'%')
				or last_name like concat('%',#{searchWord},'%')
			</if>
		</where>
		order by actor_id asc
		limit #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectActorCount" parameterType="String" resultType="int">
		select count(*)
		from actor
		<where>
			<if test="searchWord != null">
				first_name like concat('%',#{searchWord},'%')
				or last_name like concat('%',#{searchWord},'%')
			</if>
		</where>
	</select>
	
	<select id="selectActorOne" parameterType="int" resultType="com.example.sakila.vo.Actor">
		select
			actor_id actorId,
			first_name firstName,
			last_name lastName,
			last_update lastUpdate
		from actor
		where actor_id = #{actorId}
	</select>
	
	<!-- /on/filmOne -->
	<select id="selectActorListByFilm" parameterType="int" resultType="com.example.sakila.vo.Actor">
		select 
			a.actor_id actorId,
			a.first_name firstName,
			a.last_name lastName
		from film_actor fa inner join actor a
		on fa.actor_id = a.actor_id
		where fa.film_id = #{filmId}
	</select>
	
	<update id="updateActor" parameterType="com.example.sakila.vo.Actor">
		update actor
			<set>
				<if test="firstName != null">
					first_name = #{firstName}
				</if>
				<if test="lastName != null">
					last_name = #{lastName}
				</if>
			</set>
		where actor_id = #{actorId}	
	</update>
	
	<!-- actor삭제 -->
	<delete id="deleteActor" parameterType="int">
		delete
		from actor
		where actor_id = #{actorId}
	</delete>
	
	<!-- filmOne 배우검색시 리스트 -->
	<select id="selectActorListByActor" parameterType="String" resultType="com.example.sakila.vo.Actor">
		select
			actor_id actorId,
			first_name firstName,
			last_name lastName
		from actor
		where first_name like concat('%',#{searchWord},'%')
		or last_name like concat('%',#{searchWord},'%')
		order by actor_id asc
	</select>
</mapper>